name: Check Release or Create
description: Check if release exists and create if needed
inputs:
  release_name:
    description: "Release name"
    required: true
  token:
    description: "GitHub token"
    required: true
runs:
  using: 'composite'
  steps:
    - name: Check if Release Exists
      shell: bash
      id: get-release-id
      run: |
        release_name="${{ inputs.release_name }}"
        release=$(curl -s -H "Authorization: token ${{ inputs.token }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$release_name")
        release_id=$(echo $release | jq -r .id)
        if [[ "$release_id" == "null" ]]; then
          release=$(curl -s -X POST -H "Authorization: token ${{ inputs.token }}" \
            -H "Content-Type: application/json" \
            -d "{\"tag_name\":\"$release_name\",\"name\":\"$release_name\",\"body\":\"RaspOVOS pre-configured for English\"}" \
            "https://api.github.com/repos/${{ github.repository }}/releases")
          release_id=$(echo $release | jq -r .id)
        fi
        echo "release_id=$release_id" >> $GITHUB_OUTPUT
    - name: Print outputs
      shell: bash
      run: |
        echo "release_id: ${{ steps.get-release-id.outputs.release_id }}"
        if [[ $release_id == "null" ]]; then
          echo "Failed to create release. Response: $release"
          exit 1
