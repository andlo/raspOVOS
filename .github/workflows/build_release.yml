# This workflow builds and releases Raspberry Pi OS images with OpenVoiceOS modifications.
# It performs the following steps:
# 1. Creates a release using the create_release.yml workflow.
# 2. Builds the base image using the modify_rpi_image.yml workflow.
# 3. Lists language directories to create a matrix for building language-specific images.
# 4. Builds language-specific images sequentially using the build_images.yml workflow.

name: Build Release

on:
  workflow_dispatch:

jobs:
  create-release:
    uses: ./.github/workflows/create_release.yml
    with:
      base_name: raspOVOS-bookworm-arm64-lite
      base_txt: Raspberry Pi OS Bookworm Lite with OpenVoiceOS modifications

  build-no-ovos-image:
    needs: create-release
    uses: ./.github/workflows/modify_rpi_image.yml
    with:
      base_image_url: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-11-19/2024-11-19-raspios-bookworm-arm64-lite.img.xz
      release_url: ${{ needs.create-release.outputs.release_url }}
      release_id: ${{ needs.create-release.outputs.release_id }}
      cache_key: ${{ needs.create-release.outputs.cache_key }}
      image_path: raspOVOS-NO-OVOS-bookworm-arm64-lite.img
      script_path: ./base/build_base.sh

  build-base-image:
    needs: [create-release, build-no-ovos-image]
    uses: ./.github/workflows/modify_rpi_image.yml
    with:
      base_image_url: ${{ needs.build-no-ovos-image.outputs.image-url }}
      release_url: ${{ needs.create-release.outputs.release_url }}
      release_id: ${{ needs.create-release.outputs.release_id }}
      cache_key: ${{ needs.create-release.outputs.cache_key }}
      image_path: raspOVOS-BASE-bookworm-arm64-lite.img
      mycroft_config_files: "./languages/default/mycroft.conf"
      script_path: ./languages/default/build_raspOVOS.sh
      constraints: "https://github.com/OpenVoiceOS/ovos-releases/raw/refs/heads/main/constraints-alpha.txt"

  list-languages:
    needs: [create-release, build-no-ovos-image,  build-base-image]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list-dirs.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List language directories
        id: list-dirs
        run: |
          dirs=$(ls -d ./languages/*/ | grep -v './languages/default/')
          dirs_json=$(echo $dirs | sed 's|./languages/||g' | sed 's|/||g' | tr '\n' ' ' | jq -R -s -c 'split(" ") | map(select(length > 0))')
          echo "matrix=$dirs_json" >> $GITHUB_OUTPUT
          echo "matrix=$dirs_json"

  build-images:
    needs: [create-release, build-no-ovos-image, build-base-image, list-languages]
    strategy:
      matrix:
        language: ${{ fromJson(needs.list-languages.outputs.matrix) }}
      # max-parallel: 1
    uses: ./.github/workflows/build_images.yml
    with:
      base_image_url: ${{ needs.build-base-image.outputs.image_url }}
      release_url: ${{ needs.create-release.outputs.release_url }}
      release_id: ${{ needs.create-release.outputs.release_id }}
      cache_key: ${{ needs.create-release.outputs.cache_key }}
      languages: ${{ matrix.language }}
